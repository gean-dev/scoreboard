// node_modules/.pnpm/@astrojs+svelte@2.1.1_astro@2.4.1_svelte@3.59.1_typescript@4.9.5_vite@4.3.6/node_modules/@astrojs/svelte/client.js
var noop = () => {
};
var client_default = (target) => {
  return (Component, props, slotted, { client }) => {
    if (!target.hasAttribute("ssr"))
      return;
    const slots = {};
    for (const [key, value] of Object.entries(slotted)) {
      slots[key] = createSlotDefinition(key, value);
    }
    try {
      new Component({
        target,
        props: {
          ...props,
          $$slots: slots,
          $$scope: { ctx: [] }
        },
        hydrate: client !== "only",
        $$inline: true
      });
    } catch (e) {
    }
  };
};
function createSlotDefinition(key, children) {
  let parent;
  return [
    () => ({
      // mount
      m(target) {
        parent = target;
        target.insertAdjacentHTML(
          "beforeend",
          `<astro-slot${key === "default" ? "" : ` name="${key}"`}>${children}</astro-slot>`
        );
      },
      // create
      c: noop,
      // hydrate
      l: noop,
      // destroy
      d() {
        if (!parent)
          return;
        const slot = parent.querySelector(
          `astro-slot${key === "default" ? ":not([name])" : `[name="${key}"]`}`
        );
        if (slot)
          slot.remove();
      }
    }),
    noop,
    noop
  ];
}
export {
  client_default as default
};
//# sourceMappingURL=@astrojs_svelte_client__js.js.map
